<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.back.mapper.TownMapper">
    <select id="all" resultType="com.sist.back.vo.TownVO">
      SELECT * FROM `town`
    </select>

    <select id="searchTownByKey" parameterType="string" resultType="com.sist.back.vo.TownVO">
      SELECT * FROM `town`
       WHERE townkey = #{townkey}
    </select>

    <select id="searchKeyByRegion" parameterType="com.sist.back.vo.TownVO" resultType="com.sist.back.vo.TownVO">
      SELECT * FROM `town`
       WHERE 1 = 1
         AND region1 = #{region1}
         AND region2 = #{region2}
         AND region3 = #{region3}
    </select>

    <insert id="insertTown" parameterType="com.sist.back.vo.TownVO" useGeneratedKeys="true" keyProperty="townkey">
      INSERT INTO `town`
      (
        region1,
        region2,
        region3,
        isdeleted
      ) VALUES (
        #{region1},
        #{region2},
        #{region3},
        0
      )
    </insert>

    <select id="searchTownByRegion" resultType="String" parameterType="map">
      SELECT DISTINCT
              region2
        FROM `town`
        WHERE isdeleted = 0
          AND region1 = #{value}
        ORDER BY 
          <if test="now != null">
          CASE 
            <foreach item="item" collection="now" separator=" " close="">
              WHEN region2 = #{item} THEN 0
            </foreach>
            ELSE 1
          END, 
          </if>
          region2
    </select>

    <select id="getNearTown" parameterType="map" resultType="com.sist.back.vo.TownVO">
      SELECT * FROM `town`
      WHERE 1 = 1
      <if test="region1 != ''">
      AND region1 = #{region1}
      AND region2 = #{region2}
      </if>
      <if test="region1 == null or region1 == ''">
      AND (region2 LIKE CONCAT('%', #{region2}, '%') or region3 LIKE CONCAT('%', #{region2}, '%'))
      </if>
      ORDER BY region2, region3
    </select>

    <select id="getAllRegion1" resultType="String">
    SELECT DISTINCT region1 FROM `town`
    ORDER BY region1
    </select>
    
    <select id="getAllRegion2" parameterType="String" resultType="String">
    SELECT DISTINCT region2 FROM `town`
    WHERE region1 = #{region1}
    ORDER BY region2
    </select>
    
    <select id="getAllRegion3" parameterType="String" resultType="String">
    SELECT DISTINCT region3 FROM `town`
    WHERE region2 = #{region2}
    ORDER BY region3
    </select>

    <!-- <select id="searchNearRegion" resultType="String" parameterType="map">
      SELECT DISTINCT
        region2
      FROM `town`
      WHERE isdeleted = 0
        AND region1 = #{value}
      ORDER BY 
        CASE 
          <foreach item="item" collection="now" separator=" " close="">
            WHEN region2 = #{item} THEN 0
          </foreach>
          ELSE 1
        END, 
        region2
    </select> -->
</mapper>